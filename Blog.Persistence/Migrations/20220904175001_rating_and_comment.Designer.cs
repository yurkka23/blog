//// <auto-generated />
//using System;
//using Blog.Persistence.EntityContext;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//#nullable disable

//namespace Blog.Persistence.Migrations
//{
//    [DbContext(typeof(BlogDbContext))]
//    [Migration("20220904175001_rating_and_comment")]
//    partial class rating_and_comment
//    {
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "6.0.8")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

//            modelBuilder.Entity("Blog.Domain.Models.Article", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Content")
//                        .IsRequired()
//                        .HasMaxLength(1000)
//                        .HasColumnType("nvarchar(1000)");

//                    b.Property<Guid>("CreatedBy")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime?>("CreatedTime")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("State")
//                        .HasColumnType("int");

//                    b.Property<string>("Title")
//                        .IsRequired()
//                        .HasMaxLength(50)
//                        .HasColumnType("nvarchar(50)");

//                    b.Property<Guid?>("UpdatedBy")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime?>("UpdatedTime")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid>("UserId")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("Id");

//                    b.HasIndex("Id")
//                        .IsUnique();

//                    b.HasIndex("UserId");

//                    b.ToTable("Articles");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.Comment", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

//                    b.Property<Guid>("ArticleId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Message")
//                        .IsRequired()
//                        .HasMaxLength(200)
//                        .HasColumnType("nvarchar(200)");

//                    b.Property<Guid>("UserId")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("Id");

//                    b.HasIndex("ArticleId");

//                    b.HasIndex("Id")
//                        .IsUnique();

//                    b.HasIndex("UserId");

//                    b.ToTable("Comments");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.Rating", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

//                    b.Property<Guid>("ArticleId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<byte>("Score")
//                        .HasColumnType("tinyint");

//                    b.Property<Guid>("UserId")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("Id");

//                    b.HasIndex("ArticleId");

//                    b.HasIndex("Id")
//                        .IsUnique();

//                    b.HasIndex("UserId");

//                    b.ToTable("Ratings");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.User", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AboutMe")
//                        .HasMaxLength(600)
//                        .HasColumnType("nvarchar(600)");

//                    b.Property<string>("FirstName")
//                        .HasMaxLength(20)
//                        .HasColumnType("nvarchar(20)");

//                    b.Property<string>("LastName")
//                        .HasMaxLength(20)
//                        .HasColumnType("nvarchar(20)");

//                    b.Property<int>("Role")
//                        .HasColumnType("int");

//                    b.Property<string>("UserName")
//                        .IsRequired()
//                        .HasMaxLength(20)
//                        .HasColumnType("nvarchar(20)");

//                    b.HasKey("Id");

//                    b.HasIndex("Id")
//                        .IsUnique();

//                    b.ToTable("Users");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.Article", b =>
//                {
//                    b.HasOne("Blog.Domain.Models.User", "User")
//                        .WithMany("Articles")
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.Comment", b =>
//                {
//                    b.HasOne("Blog.Domain.Models.Article", "Article")
//                        .WithMany("Comments")
//                        .HasForeignKey("ArticleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Blog.Domain.Models.User", "User")
//                        .WithMany("Comments")
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("Article");

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.Rating", b =>
//                {
//                    b.HasOne("Blog.Domain.Models.Article", "Article")
//                        .WithMany("Ratings")
//                        .HasForeignKey("ArticleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Blog.Domain.Models.User", "User")
//                        .WithMany("Ratings")
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("Article");

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.Article", b =>
//                {
//                    b.Navigation("Comments");

//                    b.Navigation("Ratings");
//                });

//            modelBuilder.Entity("Blog.Domain.Models.User", b =>
//                {
//                    b.Navigation("Articles");

//                    b.Navigation("Comments");

//                    b.Navigation("Ratings");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
